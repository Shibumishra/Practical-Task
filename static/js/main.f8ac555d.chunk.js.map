{"version":3,"sources":["SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["makeStyles","theme","button","display","marginTop","spacing","formControl","margin","minWidth","SignUp","props","useState","selsectDate","setSelsectDate","validationSchema","Yup","shape","name","min","required","email","gender","oneOf","phoneNumber","typeError","password","confirmPassword","termAndConditions","birthDate","nullable","Grid","Paper","style","padding","width","align","Avatar","backgroundColor","Typography","variant","initialValues","onSubmit","values","console","log","localStorage","setItem","JSON","stringify","setTimeout","resetForm","setSubmitting","as","TextField","label","fullWidth","placeholder","type","helperText","FormLabel","component","selected","onChange","date","dateFormat","maxDate","Date","showYearDropdown","scrollableMonthYearDropdown","TextareaAutosize","minRows","id","defaultValue","InputLabelProps","shrink","InputLabel","Select","labelId","value","MenuItem","FormControl","RadioGroup","FormControlLabel","control","Radio","FormHelperText","Checkbox","color","Button","disabled","isSubmitting","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8ac555d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Grid, Paper, Avatar, Button, Typography } from '@material-ui/core';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { FormHelperText } from '@material-ui/core';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      display: 'block',\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n  }));\r\n\r\n\r\nfunction onChange(date, dateString) {\r\n    console.log(date, dateString);\r\n}\r\n\r\nconst SignUp = (props) => {\r\n    const [selsectDate, setSelsectDate] = useState(null)\r\n    const paperStyle = { padding: 20, width: 300, margin: \"0 auto\" }\r\n    const headerStyle = { margin: 0 }\r\n    const avatarStyle = { backgroundColor: '#1bbd7e' }\r\n    const [value, setValue] = useState('female');\r\n\r\n    const initialValues = {\r\n        name: '',\r\n        email: '',\r\n        gender: '',\r\n        phoneNumber: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        birthDate: null,\r\n        termAndConditions: false\r\n    }\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        name: Yup.string().min(3, \"It's too short\").required(\"Required\"),\r\n        email: Yup.string().email(\"Enter valid email\").required(\"Redured\"),\r\n        gender: Yup.string().oneOf([\"male\", \"female\"], \"Required\").required(\"Required\"),\r\n        phoneNumber: Yup.number().typeError(\"Enter valid phone number\").required(\"Redured\"),\r\n        password: Yup.string().min(8, \"Password min length should be 8\").required(\"Required\"),\r\n        confirmPassword: Yup.string().oneOf([Yup.ref('password')], \"Password not Matched\").required(\"Required\"),\r\n        termAndConditions: Yup.string().oneOf([\"true\"], \"Accept terms & conditions\"),\r\n        birthDate: Yup.date().required('required').nullable()\r\n    })\r\n\r\n    const onSubmit = (values, props) => {\r\n        console.log(values)\r\n        localStorage.setItem('UserData', JSON.stringify(values));\r\n        setTimeout(() => {\r\n            props.resetForm()\r\n            props.setSubmitting(false)\r\n        }, 2000)\r\n    }\r\n    return (\r\n        <Grid>\r\n            <Paper style={paperStyle}>\r\n                <Grid align=\"center\">\r\n                    <Avatar style={avatarStyle}>\r\n                        <AddCircleOutlineOutlinedIcon />\r\n                    </Avatar>\r\n                    <h2 style={headerStyle}>Sign Up</h2>\r\n                    <Typography variant=\"caption\">Please fill this form to create an account !</Typography>\r\n                </Grid>\r\n                <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n                    {(props) => (\r\n                        <Form>\r\n                            <Field as={TextField} label='Name' name=\"name\" fullWidth\r\n                                placeholder=\"Enter you name\" type=\"text\" helperText={<ErrorMessage name=\"name\" />} />\r\n                            {/*BirthDay */}\r\n\r\n                            <FormLabel component=\"legend\">Birthdate</FormLabel>\r\n                            <DatePicker selected={selsectDate}\r\n                                onChange=\r\n                                {date => setSelsectDate(date)}\r\n                                dateFormat='dd/MM/yyyy'\r\n                                maxDate={new Date()}\r\n                                showYearDropdown\r\n                                scrollableMonthYearDropdown\r\n                            />\r\n\r\n\r\n                            <Field as={TextField} label='Email' name=\"email\" fullWidth type=\"email\"\r\n                                placeholder=\"Enter you email\" helperText={<ErrorMessage name=\"email\" />} />\r\n\r\n                            <FormLabel component=\"legend\">About</FormLabel>\r\n                            <TextareaAutosize aria-label=\"minimum height\" minRows={3} />\r\n\r\n                            {/* Experience */}\r\n                            <FormLabel component=\"legend\" style={{ marginTop: \"25px\" }}>Experience</FormLabel>\r\n                            <Field as={TextField} label='Company Name' name=\"Company Name\" fullWidth\r\n                                placeholder=\"Company Name\" type=\"text\" helperText={<ErrorMessage name=\"Company Name\" />} />\r\n                            <Field as={TextField} label='Job Post' name=\"Job Post\" fullWidth\r\n                                placeholder=\"Job Post\" type=\"text\" helperText={<ErrorMessage name=\"Job Post\" />} />\r\n                            <Field as={TextField} label='Location' name=\"Location\" fullWidth\r\n                                placeholder=\"Location\" type=\"text\" helperText={<ErrorMessage name=\"Location\" />} />\r\n                            <Field as={TextField} label='Description' name=\"Description\" fullWidth\r\n                                placeholder=\"Description\" type=\"text\" helperText={<ErrorMessage name=\"Description\" />} />\r\n                            <Field as={TextField} label='isCurrent' name=\"isCurrent\" fullWidth\r\n                                placeholder=\"isCurrent\" type=\"text\" helperText={<ErrorMessage name=\"isCurrent\" />} />\r\n                            <TextField\r\n                                id=\"date\"\r\n                                label=\"Select Date\"\r\n                                type=\"date\"\r\n                                defaultValue=\"Select Date\"\r\n\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                            {/* Education */}\r\n                            <FormLabel component=\"legend\" style={{ marginTop: \"25px\" }}>Experience</FormLabel>\r\n                            <Field as={TextField} label='Name' name=\"name\" fullWidth\r\n                                placeholder=\"Enter you name\" type=\"text\" helperText={<ErrorMessage name=\"name\" />} />\r\n                            <Field as={TextField} label='Location' name=\"Location\" fullWidth\r\n                                placeholder=\"Location\" type=\"text\" helperText={<ErrorMessage name=\"Location\" />} />\r\n                            <FormLabel component=\"legend\">About</FormLabel>\r\n                            <TextareaAutosize aria-label=\"minimum height\" minRows={3} />\r\n                            <TextField\r\n                                id=\"date\"\r\n                                label=\"Select Year\"\r\n                                type=\"date\"\r\n                                defaultValue=\"Select Date\"\r\n\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                            {/* Languages */}\r\n                            <InputLabel id=\"demo-controlled-open-select-label\">Languages</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-controlled-open-select-label\"\r\n                                id=\"demo-controlled-open-select\"\r\n                                value=\"Languages\"\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={10}>Eng</MenuItem>\r\n                                <MenuItem value={20}>Hin</MenuItem>\r\n                                <MenuItem value={30}>Ban</MenuItem>\r\n                            </Select>\r\n\r\n                            <FormControl component=\"fieldset\" style={{ marginTop: \"28px\" }}>\r\n                                <FormLabel component=\"legend\">Gender</FormLabel>\r\n                                <Field as={RadioGroup} aria-label=\"gender\" name=\"gender\" style={{ display: 'initial' }}>\r\n                                    <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n                                    <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n                                </Field>\r\n                            </FormControl>\r\n                            <FormHelperText><ErrorMessage name=\"gender\" /></FormHelperText>\r\n                            <Field as={TextField} label='Phone Number' name=\"phoneNumber\" fullWidth type=\"number\"\r\n                                placeholder=\"Enter you phnon no.\" helperText={<ErrorMessage name=\"phoneNumber\" />} />\r\n                            <Field as={TextField} label='Password' name=\"password\" fullWidth type=\"password\"\r\n                                placeholder=\"Enter password\" helperText={<ErrorMessage name=\"password\" />} />\r\n                            <Field as={TextField} label='Confirm Password' name=\"confirmPassword\" fullWidth type=\"password\"\r\n                                placeholder=\"Conform password\" helperText={<ErrorMessage name=\"confirmPassword\" />} />\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Field as={Checkbox}\r\n                                        name=\"termAndConditions\"\r\n                                        color=\"secondary\"\r\n                                    />\r\n                                }\r\n                                label=\"I accept the terms and conditions.\"\r\n                            />\r\n                            <FormHelperText><ErrorMessage name=\"termAndConditions\" /></FormHelperText>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={props.isSubmitting}\r\n                            >{props.isSubmitting ? \"Loading\" : \"Sign Up\"}</Button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default SignUp;","import React from 'react';\nimport './App.css';\nimport SignUp from \"./SignUp\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SignUp />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}